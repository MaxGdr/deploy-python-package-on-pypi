# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = my_super_python_package
version = attr: my_super_python_package.__version__
description = my package is an exemple 
author = Maxime GENDRE
author-email = gendre.maxime@gmail.com
long-description = file: README.md
long-description-content-type = text/markdown; charset=UTF-8
url = https://github.com/MaxGdr/deploy-python-package-on-pypi
project-urls =
    Documentation = https://github.com/MaxGdr/deploy-python-package-on-pypi
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src

setup_requires = pytest-runner

install_requires = numpy
                   pandas


# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >= 3.6

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install my_super_python_package[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pipenv
    pytest
    pytest-cov
    flake8

dev = 
    pipenv
    pytest

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = my_super_python_package.module:function

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov my_super_python_package --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
no-vcs = 1
formats = bdist_wheel

[flake8]
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
